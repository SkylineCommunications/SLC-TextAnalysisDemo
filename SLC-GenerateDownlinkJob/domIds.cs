//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Dom Editor automation script.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace DomIds
{
	using System;
	using Skyline.DataMiner.Net.Apps.DataMinerObjectModel;
	using Skyline.DataMiner.Net.Sections;

	public static class SlcWorkflow
	{
		public const string ModuleId = "(slc)workflow";
		public static class Enums
		{
			public static class Qtytype
			{
				public const string Min = "min";
				public const string Hour = "hour";
				public const string Day = "day";
				public const string PerUse = "use";
				public static string ToValue(QtyTypeEnum @enum)
				{
					switch (@enum)
					{
						case QtyTypeEnum.Min:
							return Min;
						case QtyTypeEnum.Hour:
							return Hour;
						case QtyTypeEnum.Day:
							return Day;
						case QtyTypeEnum.PerUse:
							return PerUse;
						default:
							throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
					}
				}

				public static QtyTypeEnum ToEnum(string s)
				{
					switch (s)
					{
						case Min:
							return QtyTypeEnum.Min;
						case Hour:
							return QtyTypeEnum.Hour;
						case Day:
							return QtyTypeEnum.Day;
						case PerUse:
							return QtyTypeEnum.PerUse;
						default:
							throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
					}
				}
			}

			public enum QtyTypeEnum
			{
				Min,
				Hour,
				Day,
				PerUse
			}

			public enum BookingAction
			{
				AllOrNothing = 0,
				BestEffort = 1
			}

			public enum DeleteAction
			{
				SingleNode = 0,
				AllNodes = 1
			}

			public enum JobState
			{
				Draft = 0,
				Tentative = 1,
				Confirmed = 2,
				Running = 3,
				Completed = 4,
				ReadyForInvoice = 5,
				Canceled = 6,
				Invoiced = 7
			}

			public enum NodeType
			{
				Source = 0,
				SourceType = 1,
				Resource = 2,
				ResourcePool = 3,
				Destination = 4,
				DestinationType = 5,
				SourceInstance = 6,
				DestinationInstance = 7
			}

			public enum ResourceSelectMode
			{
				Manual = 0,
				AutoSelectAtBooking = 1,
				AutoSelectAtRuntime = 2
			}

			public enum ResourceSelectState
			{
				Selected = 0,
				PendingAutoSelection = 1,
				PendingManualSelection = 2,
				RequestedResource = 3,
				Error = 4
			}

			public enum NodeConfigurationStatus
			{
				NoValuesNeeded = 0,
				MandatoryValuesMissing = 1,
				NonMandatoryValuesMissing = 2,
				AllValuesProvided = 3
			}

			public enum AtJobStart
			{
				CreateServiceImmediately = 0,
				CreateServiceAtWorkflowStart = 1,
				DonTCreateService = 2
			}

			public enum AtJobEnd
			{
				DeleteServiceIfOneExists = 0,
				DonTDeleteService = 1
			}

			public enum FilterType
			{
				Capability = 0,
				Capacity = 1,
				Domain = 2
			}

			public enum ReplaceAction
			{
				SingleNode = 0,
				AllNodes = 1
			}

			public enum ConnectionType
			{
				LevelBased = 0,
				TagBased = 1
			}

			public enum ConnectionSubtype
			{
				All = 0,
				PredefinedSubset = 1,
				CustomSubset = 2,
				Shuffle = 3
			}

			public enum PredefinedSubset
			{
				VAD = 0,
				V = 1,
				A = 2,
				D = 3,
				VA = 4,
				VD = 5,
				AD = 6
			}

			public enum JobPriority
			{
				High = 0,
				Normal = 1,
				Low = 2
			}

			public static class Lineitemtype
			{
				public const string Costing = "costing";
				public const string Billing = "billing";
				public static string ToValue(LineItemTypeEnum @enum)
				{
					switch (@enum)
					{
						case LineItemTypeEnum.Costing:
							return Costing;
						case LineItemTypeEnum.Billing:
							return Billing;
						default:
							throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
					}
				}

				public static LineItemTypeEnum ToEnum(string s)
				{
					switch (s)
					{
						case Costing:
							return LineItemTypeEnum.Costing;
						case Billing:
							return LineItemTypeEnum.Billing;
						default:
							throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
					}
				}
			}

			public enum LineItemTypeEnum
			{
				Costing,
				Billing
			}

			public static class Objecttype
			{
				public const string Node = "node";
				public const string Workflow = "workflow";
				public static string ToValue(ObjectTypeEnum @enum)
				{
					switch (@enum)
					{
						case ObjectTypeEnum.Node:
							return Node;
						case ObjectTypeEnum.Workflow:
							return Workflow;
						default:
							throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
					}
				}

				public static ObjectTypeEnum ToEnum(string s)
				{
					switch (s)
					{
						case Node:
							return ObjectTypeEnum.Node;
						case Workflow:
							return ObjectTypeEnum.Workflow;
						default:
							throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
					}
				}
			}

			public enum ObjectTypeEnum
			{
				Node,
				Workflow
			}

			public enum JobConfigurationStatus
			{
				NoValuesNeeded = 0,
				MandatoryValuesMissing = 1,
				NonMandatoryValuesMissing = 2,
				AllValuesProvided = 3
			}

			public enum ProcessStatus
			{
				NA = 0,
				UpdatingSeries = 1,
				SeriesUpdated = 2,
				UpdateFailed = 3
			}

			public enum DesiredJobStatus
			{
				Draft = 0,
				Tentative = 1
			}

			public enum Priority
			{
				High = 1,
				Normal = 2,
				Low = 3
			}
		}

		public static class Sections
		{
			public static class Errors
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("fd2df49f-05a5-4bc8-9072-2e19dd88d145"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID ErrorCode
				{
					get;
				}

				= new FieldDescriptorID(new Guid("1155114c-b19e-4c26-a3e4-ffba40630388"));
				public static FieldDescriptorID ErrorMessage
				{
					get;
				}

				= new FieldDescriptorID(new Guid("8821968b-14ba-4aa3-a85f-f0660012a943"));
			}

			public static class Rate
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("b41107d1-0e7f-4089-8162-990d47377d4c"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID Qty
				{
					get;
				}

				= new FieldDescriptorID(new Guid("8445ad52-138c-4edf-873f-0d2a3d92ac15"));
				public static FieldDescriptorID QtyType
				{
					get;
				}

				= new FieldDescriptorID(new Guid("b5e7fb30-24c7-42a8-85d5-b6058932ab67"));
				public static FieldDescriptorID AmountPerUnit
				{
					get;
				}

				= new FieldDescriptorID(new Guid("81bb7ed4-069f-4947-8da3-622dcffa9dac"));
				public static FieldDescriptorID TotalAmount
				{
					get;
				}

				= new FieldDescriptorID(new Guid("54c2a8c3-b6ac-45f1-ace0-d2263585659e"));
				public static FieldDescriptorID TotalNetAmount
				{
					get;
				}

				= new FieldDescriptorID(new Guid("2282e9f8-0461-4a79-a62d-901c93714183"));
			}

			public static class JobNodeRelationshipGeneralActions
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("bd8f007f-fc61-47e5-83f8-0e708217db29"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID BookingAction
				{
					get;
				}

				= new FieldDescriptorID(new Guid("059c2b6a-0739-4db1-ade4-bf9ad2d0a9e9"));
				public static FieldDescriptorID DeleteAction
				{
					get;
				}

				= new FieldDescriptorID(new Guid("c09c90cc-725f-42d5-8a09-4a9a15cbeaa0"));
			}

			public static class JobLiteMetadata
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("7467b898-571c-4dfd-b5e9-cf444480a12f"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID FullJobID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("54743d37-4acf-485f-ba21-c3d85a2db2eb"));
				public static FieldDescriptorID JobState
				{
					get;
				}

				= new FieldDescriptorID(new Guid("c17dc61c-5f6c-403a-afd2-7b33c0e5b7ec"));
				public static FieldDescriptorID LinkedResourcesMetadata
				{
					get;
				}

				= new FieldDescriptorID(new Guid("4f16400c-560f-43b2-9e01-3484156f4d0c"));
				public static FieldDescriptorID JobDuration
				{
					get;
				}

				= new FieldDescriptorID(new Guid("0711ae78-8cd2-463b-908d-6ab6a5a839e1"));
			}

			public static class SessionDataStore
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("3c203118-c2ae-42ad-9f95-808fd988dabb"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID JobId
				{
					get;
				}

				= new FieldDescriptorID(new Guid("f3b60386-20cd-41da-953a-4a8ace65ad43"));
			}

			public static class JobSettings
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("19f2d7c6-ed16-4e05-bd02-78016a4c8a9d"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID JobIDPrefix
				{
					get;
				}

				= new FieldDescriptorID(new Guid("800227f3-e4c7-48ea-b3ec-98b2a40f8982"));
				public static FieldDescriptorID JobIDMinimumDigits
				{
					get;
				}

				= new FieldDescriptorID(new Guid("b8ee8619-f64e-4c71-8c36-3a0692b6456e"));
				public static FieldDescriptorID JobIDStartingSeed
				{
					get;
				}

				= new FieldDescriptorID(new Guid("9778566b-422f-4908-a05f-e56a93037779"));
				public static FieldDescriptorID JobIDIncrement
				{
					get;
				}

				= new FieldDescriptorID(new Guid("1a55336d-d207-48ed-9c56-3d43219f8f7b"));
				public static FieldDescriptorID JobIDNextSequence
				{
					get;
				}

				= new FieldDescriptorID(new Guid("3e07caec-bb58-4870-997c-42f0bcd7bc63"));
				public static FieldDescriptorID DefaultPreroll
				{
					get;
				}

				= new FieldDescriptorID(new Guid("e9d15d74-a962-45e2-9698-2df0092068af"));
				public static FieldDescriptorID DefaultPostroll
				{
					get;
				}

				= new FieldDescriptorID(new Guid("081457ee-2c47-4296-8852-492fbd8548c9"));
			}

			public static class Nodes
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("717f9a98-a705-4740-86ec-05204ef6dd28"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID NodeID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("ef8bb4aa-095e-47e0-9d88-b994b5309a18"));
				public static FieldDescriptorID NodeAlias
				{
					get;
				}

				= new FieldDescriptorID(new Guid("a330c5a1-df84-4044-94eb-f1d6b96bdac0"));
				public static FieldDescriptorID NodeType
				{
					get;
				}

				= new FieldDescriptorID(new Guid("abb6aadf-b315-4722-bc0e-859f6c3feae2"));
				public static FieldDescriptorID NodeReferenceID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("fbbd7129-e818-4c73-9cc2-e6db158bf89f"));
				public static FieldDescriptorID NodeParentReferenceID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("17d00bc5-e562-4221-8aba-fd3c4be7d31d"));
				public static FieldDescriptorID NodeIcon
				{
					get;
				}

				= new FieldDescriptorID(new Guid("3d3656ab-a46f-49f8-a584-7a5d7ecb33f4"));
				public static FieldDescriptorID AutomaticConfiguration
				{
					get;
				}

				= new FieldDescriptorID(new Guid("bb98266a-ab15-4694-9320-6f0d315f1d2c"));
				public static FieldDescriptorID ConfigurationParameters
				{
					get;
				}

				= new FieldDescriptorID(new Guid("b54826a6-81ba-45f9-a899-40ddaba83024"));
				public static FieldDescriptorID AdHocControlScript
				{
					get;
				}

				= new FieldDescriptorID(new Guid("99d2b240-e4d6-4623-a040-8dd4a21688e4"));
				public static FieldDescriptorID NodeConfigurationExecutionOrder
				{
					get;
				}

				= new FieldDescriptorID(new Guid("e3805313-fc3a-4321-be34-a7d573d5ca9c"));
				public static FieldDescriptorID ReserveNode
				{
					get;
				}

				= new FieldDescriptorID(new Guid("f3c111f3-33fc-45a6-a4f2-8140b1c1e3ad"));
				public static FieldDescriptorID Hidden
				{
					get;
				}

				= new FieldDescriptorID(new Guid("372f67c9-30c8-4370-9a65-3d115c2d6d5c"));
				public static FieldDescriptorID NodeStartTime
				{
					get;
				}

				= new FieldDescriptorID(new Guid("d932725e-a6f4-4707-bce5-5c749d8ccba7"));
				public static FieldDescriptorID NodeEndTime
				{
					get;
				}

				= new FieldDescriptorID(new Guid("d3c4926c-83a7-4ce7-9f4f-e8c4f4de9482"));
				public static FieldDescriptorID LinkedBookingIds
				{
					get;
				}

				= new FieldDescriptorID(new Guid("35167132-87db-4a8b-afd8-5bc120c1180a"));
				public static FieldDescriptorID ResourceSelectMode
				{
					get;
				}

				= new FieldDescriptorID(new Guid("52109652-da0c-4a34-935a-fbeacea21c0b"));
				public static FieldDescriptorID ResourceSelectState
				{
					get;
				}

				= new FieldDescriptorID(new Guid("c2525fb4-28eb-4816-b2e3-30556f5d4d3b"));
				public static FieldDescriptorID Billable
				{
					get;
				}

				= new FieldDescriptorID(new Guid("c5418bb2-8c9b-4bdf-8955-ff1be21df3e7"));
				public static FieldDescriptorID NodeConfiguration
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7c13f5af-6a13-43bc-99f2-49c14d160397"));
				public static FieldDescriptorID NodeConfigurationStatus
				{
					get;
				}

				= new FieldDescriptorID(new Guid("3e268011-9ec3-465b-af62-2a4916f3e1f7"));
			}

			public static class CostingAndBilling
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("bce8a3ba-4f5d-4a8b-840f-dfb5940b8d4c"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID Organization
				{
					get;
				}

				= new FieldDescriptorID(new Guid("b4280765-96fe-400a-99a9-e430e9b3d99a"));
				public static FieldDescriptorID JobOwner
				{
					get;
				}

				= new FieldDescriptorID(new Guid("818f79f7-7df3-4ae4-b39e-4fa90b732cf4"));
				public static FieldDescriptorID AdditionalContacts
				{
					get;
				}

				= new FieldDescriptorID(new Guid("b081fecc-518c-4e29-be4b-c3b3fba6509c"));
				public static FieldDescriptorID Contract
				{
					get;
				}

				= new FieldDescriptorID(new Guid("d183ca7d-b735-4508-8dcb-1522a2134ea1"));
				public static FieldDescriptorID JobStatus
				{
					get;
				}

				= new FieldDescriptorID(new Guid("d249324d-5ab5-4253-9490-7c9bf7d0da0a"));
				public static FieldDescriptorID ContractUplift
				{
					get;
				}

				= new FieldDescriptorID(new Guid("9b2e77b8-7c27-4c06-b522-b2080f32a215"));
				public static FieldDescriptorID ContractDiscount
				{
					get;
				}

				= new FieldDescriptorID(new Guid("365a821e-a837-486b-a6e9-7bd0485b3f60"));
				public static FieldDescriptorID SpeedOrderIncrementOnTopOfBillingPrice
				{
					get;
				}

				= new FieldDescriptorID(new Guid("0c6dc91c-2771-443d-9c56-eeeecb267beb"));
				public static FieldDescriptorID SpeedOrderFixedFee
				{
					get;
				}

				= new FieldDescriptorID(new Guid("8b40e49f-8ba1-47f2-b549-d33517139627"));
				public static FieldDescriptorID CancellationOfBillingPrice
				{
					get;
				}

				= new FieldDescriptorID(new Guid("3b175dae-ec7a-47db-85b5-1d07940de9b3"));
				public static FieldDescriptorID CancellationFixedFee
				{
					get;
				}

				= new FieldDescriptorID(new Guid("ce2921ab-3744-4733-b3fa-c25e2ddda82d"));
				public static FieldDescriptorID LastBillCalculation
				{
					get;
				}

				= new FieldDescriptorID(new Guid("f721e551-5139-479f-9ed7-717c3313384f"));
				public static FieldDescriptorID TotalBillNetAmount
				{
					get;
				}

				= new FieldDescriptorID(new Guid("27624e6a-faee-4416-aaf4-c8440ef8f956"));
				public static FieldDescriptorID TotalBillNetOverrideAmount
				{
					get;
				}

				= new FieldDescriptorID(new Guid("5d24ed13-5be4-4d41-9d43-f33573e9f645"));
				public static FieldDescriptorID BillCurrency
				{
					get;
				}

				= new FieldDescriptorID(new Guid("47f0e303-d85e-4cd3-8d3b-896245e49ec8"));
			}

			public static class MonitoringSettings
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("74d2d947-36be-41f0-babd-9a5b986d928b"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID AtJobStart
				{
					get;
				}

				= new FieldDescriptorID(new Guid("b9a62e46-492a-4eba-a1ce-5218ce306989"));
				public static FieldDescriptorID AtJobEnd
				{
					get;
				}

				= new FieldDescriptorID(new Guid("aa1d9ed8-33f4-437a-9a7b-0d993d5ebb22"));
				public static FieldDescriptorID MonitoringServiceTemplate
				{
					get;
				}

				= new FieldDescriptorID(new Guid("234e3e79-b84a-4a74-8751-0ca1f14a9dbd"));
				public static FieldDescriptorID MonitoringServiceID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("e67d43c5-5efc-4254-b837-049d45cb548e"));
			}

			public static class SessionFilter
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("17b3fc7e-089d-4855-b7fe-07df846fa933"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID FilterType
				{
					get;
				}

				= new FieldDescriptorID(new Guid("acb54b31-a34c-4861-980e-5ef6d6094df8"));
				public static FieldDescriptorID FilterKey
				{
					get;
				}

				= new FieldDescriptorID(new Guid("c77a5add-1607-484b-941c-c53531a87d27"));
				public static FieldDescriptorID FilterValues
				{
					get;
				}

				= new FieldDescriptorID(new Guid("e9fed5ae-2702-42f2-962b-48bb5280b4df"));
			}

			public static class JobNodeRelationshipReplaceActions
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("76908a6e-09bc-490a-ba34-2e7e23acd450"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID ReplaceAction
				{
					get;
				}

				= new FieldDescriptorID(new Guid("f6f3ab33-99c7-4d8f-81ce-f59c2e713f34"));
				public static FieldDescriptorID ExecutePoolLinks
				{
					get;
				}

				= new FieldDescriptorID(new Guid("1bbee8e3-6eed-45ae-90a6-c7685df3c7dc"));
				public static FieldDescriptorID ExecuteBookingExtensionScript
				{
					get;
				}

				= new FieldDescriptorID(new Guid("c4d0bafa-3001-4d43-a18d-8e8d9f1a6019"));
			}

			public static class Connections
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("8e46264a-8100-49a1-bcef-076490b25da1"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID ConnectionID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("8ce0d61a-1976-4fea-9d9f-450649b209b0"));
				public static FieldDescriptorID SourceNodeID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("2b6d7fc8-c8c4-4667-b4e9-c5f1dfb63e1c"));
				public static FieldDescriptorID DestinationNodeID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("920b7393-c581-421b-8d51-9915d3c294bd"));
				public static FieldDescriptorID ConnectionAlias
				{
					get;
				}

				= new FieldDescriptorID(new Guid("f043e11d-eef7-4abf-bf03-e50c43d0864b"));
				public static FieldDescriptorID ConnectionExecutionOrder
				{
					get;
				}

				= new FieldDescriptorID(new Guid("45abe861-4984-4954-a87d-17c49214370b"));
				public static FieldDescriptorID ConnectionType
				{
					get;
				}

				= new FieldDescriptorID(new Guid("78177b0b-b65b-4327-83bb-da85488b8aa0"));
				public static FieldDescriptorID ConnectionSubtype
				{
					get;
				}

				= new FieldDescriptorID(new Guid("341234dd-7e0c-4df7-ade5-92f075581acb"));
				public static FieldDescriptorID PredefinedSubset
				{
					get;
				}

				= new FieldDescriptorID(new Guid("30e61037-d74a-4c3d-8795-aec859117fba"));
				public static FieldDescriptorID ConnectionDetails
				{
					get;
				}

				= new FieldDescriptorID(new Guid("a1e15aae-7540-4d1c-9d22-c5a3c7861e28"));
				public static FieldDescriptorID ConnectionExecutionScript
				{
					get;
				}

				= new FieldDescriptorID(new Guid("9e0cee09-3a32-42f2-be30-cf52df76f833"));
			}

			public static class JobInfo
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("dd1d3774-c681-47d3-950a-3783e3533bf9"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID JobID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("a717a4c3-c374-4b24-8f33-feee73208955"));
				public static FieldDescriptorID JobName
				{
					get;
				}

				= new FieldDescriptorID(new Guid("d9084944-9dcc-43c1-8783-2e22626feb9e"));
				public static FieldDescriptorID JobDescription
				{
					get;
				}

				= new FieldDescriptorID(new Guid("2fc4d087-2776-48d6-a990-373ab4b05c1b"));
				public static FieldDescriptorID Workflow
				{
					get;
				}

				= new FieldDescriptorID(new Guid("9d608393-c7f2-4f45-9857-8b18c5f42a47"));
				public static FieldDescriptorID JobStart
				{
					get;
				}

				= new FieldDescriptorID(new Guid("eabadf08-89e9-499a-b119-07d76c544a90"));
				public static FieldDescriptorID JobEnd
				{
					get;
				}

				= new FieldDescriptorID(new Guid("0d978e1c-dbba-4592-a9b2-32ed65fc7603"));
				public static FieldDescriptorID ApproxOutDuration
				{
					get;
				}

				= new FieldDescriptorID(new Guid("79a7943e-5adf-44fa-9984-9f16622ebbb3"));
				public static FieldDescriptorID ApproxOutTime
				{
					get;
				}

				= new FieldDescriptorID(new Guid("ea1f069f-7fe7-4ce2-91d3-aca94051f74b"));
				public static FieldDescriptorID JobPriority
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7775cd7c-0b56-4878-ad35-a7757d436a32"));
				public static FieldDescriptorID JobSource
				{
					get;
				}

				= new FieldDescriptorID(new Guid("9cae3907-45ba-4ef7-8c42-559b7c2e6ad3"));
				public static FieldDescriptorID JobNotes
				{
					get;
				}

				= new FieldDescriptorID(new Guid("cfac4a80-00b7-4531-9a3b-8ec34b84afbf"));
				public static FieldDescriptorID OriginalJobStart
				{
					get;
				}

				= new FieldDescriptorID(new Guid("fe9e1f6d-7083-4ada-8895-7f0620c10f54"));
				public static FieldDescriptorID OriginalJobEnd
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7f1cf5f7-4aed-47f5-901d-4f5c2fc991bc"));
				public static FieldDescriptorID JobConfirmation
				{
					get;
				}

				= new FieldDescriptorID(new Guid("0090948e-4609-4281-ba3c-14945652629b"));
				public static FieldDescriptorID JobCancellation
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7ec04ba8-a457-4390-b756-3d1afb8e9c71"));
				public static FieldDescriptorID ActionNeeded
				{
					get;
				}

				= new FieldDescriptorID(new Guid("d9afd738-5c54-4d14-b287-b4ecc663d204"));
				public static FieldDescriptorID LockedBy
				{
					get;
				}

				= new FieldDescriptorID(new Guid("841be21d-4de0-46d0-8a97-ff57dbfa87a0"));
				public static FieldDescriptorID Preroll
				{
					get;
				}

				= new FieldDescriptorID(new Guid("0ca0cc12-cb87-46a6-b27b-b87ab0dd2632"));
				public static FieldDescriptorID Postroll
				{
					get;
				}

				= new FieldDescriptorID(new Guid("07b1ade4-2aa8-48a2-a462-e5f60829f521"));
				public static FieldDescriptorID JobSeriesID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("e35a308c-c342-4d61-b53e-744ffdeda9b9"));
			}

			public static class CostingAndBillingDetails
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("28a99ebf-efd3-4046-9592-35e448f54e6a"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID LineItemType
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7552a3e0-edb8-4a84-8a37-16e987116d41"));
				public static FieldDescriptorID ObjectType
				{
					get;
				}

				= new FieldDescriptorID(new Guid("ccfd1aa0-3574-49d0-ac2d-e29e89697ad1"));
				public static FieldDescriptorID ObjectID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("d3229cac-d373-4bb7-a501-3b68176e07a9"));
				public static FieldDescriptorID Description
				{
					get;
				}

				= new FieldDescriptorID(new Guid("ba982271-d1f5-4827-a1f1-7a573961138b"));
				public static FieldDescriptorID RateCard
				{
					get;
				}

				= new FieldDescriptorID(new Guid("3b33582c-5c57-4a0b-8567-89abe034920f"));
				public static FieldDescriptorID TotalNetOverrideAmount
				{
					get;
				}

				= new FieldDescriptorID(new Guid("9d1c4c09-5b73-4d34-bd0f-0cf393135d00"));
				public static FieldDescriptorID Currency
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7deef271-9ccc-4ba9-9fcc-af8ce899dd65"));
				public static FieldDescriptorID Rates
				{
					get;
				}

				= new FieldDescriptorID(new Guid("f0ce49a3-a023-45e0-9787-0875fab7d3c2"));
			}

			public static class WorkflowExecution
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("f81c94fc-a43d-4f77-9e3d-d9a34dc9cf27"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID WorkflowExecutionScript
				{
					get;
				}

				= new FieldDescriptorID(new Guid("3b7d81b5-d5a6-47cf-a872-ca4e1259923c"));
				public static FieldDescriptorID WorkflowConfiguration
				{
					get;
				}

				= new FieldDescriptorID(new Guid("4cd751d1-db58-448d-81d5-0f41b43000dd"));
			}

			public static class ProfileParameterValues
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("86ffc829-5846-4737-b5fd-a2411c8bb884"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID ProfileParameterID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("2419f53b-ade1-4fce-8029-905cc5b14cea"));
				public static FieldDescriptorID StringValue
				{
					get;
				}

				= new FieldDescriptorID(new Guid("c7a8923e-2882-4c94-87c7-d44a05cc906a"));
				public static FieldDescriptorID DoubleValue
				{
					get;
				}

				= new FieldDescriptorID(new Guid("caa80a42-1956-4d97-be3a-b7828267d035"));
				public static FieldDescriptorID ReferenceID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("60badcf5-0ec0-4b01-83f0-7c78cc7b0867"));
			}

			public static class SessionDataUser
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("45c92fe1-0b64-47dc-b76b-5a9fb5329fb1"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID User
				{
					get;
				}

				= new FieldDescriptorID(new Guid("5ea43113-88eb-4a05-8046-b9ad27b5f198"));
			}

			public static class JobExecution
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("43a36804-3409-4498-8620-eaec80238fcc"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID JobExecutionScript
				{
					get;
				}

				= new FieldDescriptorID(new Guid("4a9bf831-b5cd-4cb1-a25b-f1967a2e177c"));
				public static FieldDescriptorID JobConfiguration
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7f98a626-bce5-4c78-8ced-387f75f27914"));
				public static FieldDescriptorID JobConfigurationStatus
				{
					get;
				}

				= new FieldDescriptorID(new Guid("21e962f1-6cce-4e73-8088-3ae37a1922c3"));
			}

			public static class NodeRelationships
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("b8ccf030-5d0c-42ac-8a00-06f430bbedf2"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID ParentNodeID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("b68b3aa5-6449-497c-b2ad-77d31522544f"));
				public static FieldDescriptorID ChildNodeID
				{
					get;
				}

				= new FieldDescriptorID(new Guid("e8cca1c7-084d-45ca-b10b-1713279aa0c1"));
				public static FieldDescriptorID RelationshipAction
				{
					get;
				}

				= new FieldDescriptorID(new Guid("99458bad-c9a8-4db5-8ea4-3aad742e9abc"));
			}

			public static class RecurringInfo
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("5d0df0b7-38ee-4297-851c-df6b616bddaa"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID Duration
				{
					get;
				}

				= new FieldDescriptorID(new Guid("be066907-2644-4ba5-a9c6-78bb1fc69a53"));
				public static FieldDescriptorID TimeZone
				{
					get;
				}

				= new FieldDescriptorID(new Guid("ad3c9b87-a4ee-475e-a5c5-205079076720"));
				public static FieldDescriptorID RecurringPattern
				{
					get;
				}

				= new FieldDescriptorID(new Guid("4316ef7b-5463-48e2-9bdc-066186558958"));
				public static FieldDescriptorID ProcessStatus
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7888de95-5599-4571-9237-ced251d2700b"));
				public static FieldDescriptorID DesiredJobStatus
				{
					get;
				}

				= new FieldDescriptorID(new Guid("4bf84f0d-09a5-4ac6-b291-92537cea7af3"));
			}

			public static class WorkflowInfo
			{
				public static SectionDefinitionID Id
				{
					get;
				}

				= new SectionDefinitionID(new Guid("22f75d97-9bf3-4d90-b769-f48c0fce025f"))
				{ ModuleId = "(slc)workflow" };
				public static FieldDescriptorID WorkflowName
				{
					get;
				}

				= new FieldDescriptorID(new Guid("db431b11-822a-4043-bed3-faaf362f9636"));
				public static FieldDescriptorID WorkflowDescription
				{
					get;
				}

				= new FieldDescriptorID(new Guid("7004da70-ce94-40aa-b531-7efa3aad577b"));
				public static FieldDescriptorID Favorite
				{
					get;
				}

				= new FieldDescriptorID(new Guid("3dc1bee6-1cc6-415f-8d96-71020fec578f"));
				public static FieldDescriptorID Priority
				{
					get;
				}

				= new FieldDescriptorID(new Guid("86f34b26-a731-4251-8bcb-e1990bfbabdd"));
			}
		}

		public static class Definitions
		{
			public static DomDefinitionId AppSettings
			{
				get;
			}

			= new DomDefinitionId(new Guid("e1ed621e-197d-4003-95f2-5c0722e37c75"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId SessionData
			{
				get;
			}

			= new DomDefinitionId(new Guid("67e8ba7f-4518-4b7f-ab43-075c2f9c1c87"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId RecurringJobs
			{
				get;
			}

			= new DomDefinitionId(new Guid("03a014b3-0a74-4abd-aefd-ead1f50c27d3"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId Jobs
			{
				get;
			}

			= new DomDefinitionId(new Guid("094b7503-2cd8-4e86-a189-c33076cabfbc"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId JobsLite
			{
				get;
			}

			= new DomDefinitionId(new Guid("89828ce8-7647-440e-81fa-6de9d24019b3"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId Rates
			{
				get;
			}

			= new DomDefinitionId(new Guid("e811303b-7bd3-48bf-a7e1-ae8aad9247f4"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId JobNodeRelationshipActions
			{
				get;
			}

			= new DomDefinitionId(new Guid("e4bd1568-1bac-4e72-913c-a175e2267c91"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId Workflows
			{
				get;
			}

			= new DomDefinitionId(new Guid("aec69c0d-8f7c-44a7-aa21-6aa741ea6135"))
			{ ModuleId = "(slc)workflow" };
			public static DomDefinitionId Configuration
			{
				get;
			}

			= new DomDefinitionId(new Guid("b5106b24-851f-4525-9dbc-72b1c0f18b7a"))
			{ ModuleId = "(slc)workflow" };
		}

		public static class Behaviors
		{
			public static class Workflow_Behavior
			{
				public static DomBehaviorDefinitionId Id
				{
					get;
				}

				= new DomBehaviorDefinitionId(new Guid("6ee464d6-d84b-4d92-9135-ed95a6f69e87"))
				{ ModuleId = "(slc)workflow" };
				public static class Statuses
				{
					public const string Draft = "dca9b656-6e4d-41a8-9f64-c57986fc672d";
					public const string Complete = "04e1ffa7-ff8e-401f-90c4-25f2bded26f5";
					public const string Obsolete = "10e4c6ab-f576-4f7a-b32c-775597dafd49";
					public static string ToValue(StatusesEnum @enum)
					{
						switch (@enum)
						{
							case StatusesEnum.Draft:
								return Draft;
							case StatusesEnum.Complete:
								return Complete;
							case StatusesEnum.Obsolete:
								return Obsolete;
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static StatusesEnum ToEnum(string s)
					{
						switch (s)
						{
							case Draft:
								return StatusesEnum.Draft;
							case Complete:
								return StatusesEnum.Complete;
							case Obsolete:
								return StatusesEnum.Obsolete;
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum StatusesEnum
				{
					Draft,
					Complete,
					Obsolete
				}

				public static class Transitions
				{
					public const string Draft_To_Complete = "draft_to_complete";
					public const string Complete_To_Obsolete = "complete_to_obsolete";
					public static string ToValue(TransitionsEnum @enum)
					{
						switch (@enum)
						{
							case TransitionsEnum.Draft_To_Complete:
								return Draft_To_Complete;
							case TransitionsEnum.Complete_To_Obsolete:
								return Complete_To_Obsolete;
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static TransitionsEnum ToEnum(string s)
					{
						switch (s)
						{
							case Draft_To_Complete:
								return TransitionsEnum.Draft_To_Complete;
							case Complete_To_Obsolete:
								return TransitionsEnum.Complete_To_Obsolete;
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum TransitionsEnum
				{
					Draft_To_Complete,
					Complete_To_Obsolete
				}

				public static class Actions
				{
					public const string _1 = "1";
					public const string _2 = "2";
					public const string EditWorkflowConfig = "edit workflow config";
					public static string ToValue(ActionsEnum @enum)
					{
						switch (@enum)
						{
							case ActionsEnum._1:
								return _1;
							case ActionsEnum._2:
								return _2;
							case ActionsEnum.EditWorkflowConfig:
								return EditWorkflowConfig;
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static ActionsEnum ToEnum(string s)
					{
						switch (s)
						{
							case _1:
								return ActionsEnum._1;
							case _2:
								return ActionsEnum._2;
							case EditWorkflowConfig:
								return ActionsEnum.EditWorkflowConfig;
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum ActionsEnum
				{
					_1,
					_2,
					EditWorkflowConfig
				}
			}

			public static class Recurringjob_Behavior
			{
				public static DomBehaviorDefinitionId Id
				{
					get;
				}

				= new DomBehaviorDefinitionId(new Guid("7d764b5d-37fc-4b74-b9a3-22183b4162f7"))
				{ ModuleId = "(slc)workflow" };
				public static class Statuses
				{
					public const string Active = "922c0cfc-1bd4-41d3-9025-d0c0a28bce0f";
					public const string Cancelled = "31d3f50e-f824-4c23-986c-d31872a88dc9";
					public const string Completed = "70ab823c-9f6c-49b7-9f77-197bf8b7e7ed";
					public static string ToValue(StatusesEnum @enum)
					{
						switch (@enum)
						{
							case StatusesEnum.Active:
								return Active;
							case StatusesEnum.Cancelled:
								return Cancelled;
							case StatusesEnum.Completed:
								return Completed;
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static StatusesEnum ToEnum(string s)
					{
						switch (s)
						{
							case Active:
								return StatusesEnum.Active;
							case Cancelled:
								return StatusesEnum.Cancelled;
							case Completed:
								return StatusesEnum.Completed;
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum StatusesEnum
				{
					Active,
					Cancelled,
					Completed
				}

				public static class Transitions
				{
					public const string Active_To_Completed = "active_to_completed";
					public const string Active_To_Cancelled = "active_to_cancelled";
					public static string ToValue(TransitionsEnum @enum)
					{
						switch (@enum)
						{
							case TransitionsEnum.Active_To_Completed:
								return Active_To_Completed;
							case TransitionsEnum.Active_To_Cancelled:
								return Active_To_Cancelled;
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static TransitionsEnum ToEnum(string s)
					{
						switch (s)
						{
							case Active_To_Completed:
								return TransitionsEnum.Active_To_Completed;
							case Active_To_Cancelled:
								return TransitionsEnum.Active_To_Cancelled;
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum TransitionsEnum
				{
					Active_To_Completed,
					Active_To_Cancelled
				}

				public static class Actions
				{
					public static string ToValue(ActionsEnum @enum)
					{
						switch (@enum)
						{
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static ActionsEnum ToEnum(string s)
					{
						switch (s)
						{
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum ActionsEnum
				{
				}
			}

			public static class Job_Behavior
			{
				public static DomBehaviorDefinitionId Id
				{
					get;
				}

				= new DomBehaviorDefinitionId(new Guid("4db4650b-c81b-48df-b48f-d6f47e69a829"))
				{ ModuleId = "(slc)workflow" };
				public static class Statuses
				{
					public const string Draft = "bd1d4175-3e1b-4a52-95a8-e215b76a2dfc";
					public const string Tentative = "a48ce836-a02e-45af-9e1a-f3950550b564";
					public const string Confirmed = "985146f2-38de-4f0d-86a5-8c292a07e562";
					public const string Running = "c2c2f157-63c6-4ee5-b648-c150c450aac4";
					public const string Completed = "d23a5d17-af16-4268-b390-f692e6717f54";
					public const string ReadyForInvoice = "7e58d816-6884-40cf-a4c9-0d2b6852d99a";
					public const string Canceled = "d5021aa6-67b9-420d-952d-cb565fee3562";
					public const string Invoiced = "fb6a95d4-9043-46a7-92d9-56cf855cefc3";
					public static string ToValue(StatusesEnum @enum)
					{
						switch (@enum)
						{
							case StatusesEnum.Draft:
								return Draft;
							case StatusesEnum.Tentative:
								return Tentative;
							case StatusesEnum.Confirmed:
								return Confirmed;
							case StatusesEnum.Running:
								return Running;
							case StatusesEnum.Completed:
								return Completed;
							case StatusesEnum.ReadyForInvoice:
								return ReadyForInvoice;
							case StatusesEnum.Canceled:
								return Canceled;
							case StatusesEnum.Invoiced:
								return Invoiced;
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static StatusesEnum ToEnum(string s)
					{
						switch (s)
						{
							case Draft:
								return StatusesEnum.Draft;
							case Tentative:
								return StatusesEnum.Tentative;
							case Confirmed:
								return StatusesEnum.Confirmed;
							case Running:
								return StatusesEnum.Running;
							case Completed:
								return StatusesEnum.Completed;
							case ReadyForInvoice:
								return StatusesEnum.ReadyForInvoice;
							case Canceled:
								return StatusesEnum.Canceled;
							case Invoiced:
								return StatusesEnum.Invoiced;
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum StatusesEnum
				{
					Draft,
					Tentative,
					Confirmed,
					Running,
					Completed,
					ReadyForInvoice,
					Canceled,
					Invoiced
				}

				public static class Transitions
				{
					public const string Draft_To_Tentative = "draft_to_tentative";
					public const string Tentative_To_Confirmed = "tentative_to_confirmed";
					public const string Confirmed_To_Running = "confirmed_to_running";
					public const string Running_To_Completed = "running_to_completed";
					public const string Confirmed_To_Canceled = "confirmed_to_canceled";
					public const string Tentative_To_Canceled = "tentative_to_canceled";
					public const string Draft_To_Completed = "draft_to_completed";
					public const string Tentative_To_Completed = "tentative_to_completed";
					public const string Confirmed_To_Tentative = "confirmed_to_tentative";
					public static string ToValue(TransitionsEnum @enum)
					{
						switch (@enum)
						{
							case TransitionsEnum.Draft_To_Tentative:
								return Draft_To_Tentative;
							case TransitionsEnum.Tentative_To_Confirmed:
								return Tentative_To_Confirmed;
							case TransitionsEnum.Confirmed_To_Running:
								return Confirmed_To_Running;
							case TransitionsEnum.Running_To_Completed:
								return Running_To_Completed;
							case TransitionsEnum.Confirmed_To_Canceled:
								return Confirmed_To_Canceled;
							case TransitionsEnum.Tentative_To_Canceled:
								return Tentative_To_Canceled;
							case TransitionsEnum.Draft_To_Completed:
								return Draft_To_Completed;
							case TransitionsEnum.Tentative_To_Completed:
								return Tentative_To_Completed;
							case TransitionsEnum.Confirmed_To_Tentative:
								return Confirmed_To_Tentative;
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static TransitionsEnum ToEnum(string s)
					{
						switch (s)
						{
							case Draft_To_Tentative:
								return TransitionsEnum.Draft_To_Tentative;
							case Tentative_To_Confirmed:
								return TransitionsEnum.Tentative_To_Confirmed;
							case Confirmed_To_Running:
								return TransitionsEnum.Confirmed_To_Running;
							case Running_To_Completed:
								return TransitionsEnum.Running_To_Completed;
							case Confirmed_To_Canceled:
								return TransitionsEnum.Confirmed_To_Canceled;
							case Tentative_To_Canceled:
								return TransitionsEnum.Tentative_To_Canceled;
							case Draft_To_Completed:
								return TransitionsEnum.Draft_To_Completed;
							case Tentative_To_Completed:
								return TransitionsEnum.Tentative_To_Completed;
							case Confirmed_To_Tentative:
								return TransitionsEnum.Confirmed_To_Tentative;
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum TransitionsEnum
				{
					Draft_To_Tentative,
					Tentative_To_Confirmed,
					Confirmed_To_Running,
					Running_To_Completed,
					Confirmed_To_Canceled,
					Tentative_To_Canceled,
					Draft_To_Completed,
					Tentative_To_Completed,
					Confirmed_To_Tentative
				}

				public static class Actions
				{
					public static string ToValue(ActionsEnum @enum)
					{
						switch (@enum)
						{
							default:
								throw new ArgumentOutOfRangeException(nameof(@enum), @enum, "Invalid value.");
						}
					}

					public static ActionsEnum ToEnum(string s)
					{
						switch (s)
						{
							default:
								throw new ArgumentOutOfRangeException(nameof(s), s, "Invalid value.");
						}
					}
				}

				public enum ActionsEnum
				{
				}
			}
		}
	}
}